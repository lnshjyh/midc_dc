<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.cw.midc.entity.StorageInfo" >
  <resultMap id="BaseResultMap" type="org.cw.midc.entity.StorageInfo" >
    <id column="storage_id" property="storageId" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="path" property="path" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <sql id="Base_Column_List">
    storage_id, create_time, name, path, status, update_time
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select * 
    from storage_info
    where storage_id = #{storageId,jdbcType=VARCHAR}
  </select>
  
  <select id="selectByStatus" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select * 
    from storage_info
    where status = #{status,jdbcType=VARCHAR}
  </select>

  <insert id="insert" parameterType="org.cw.midc.entity.StorageInfo" >
    insert into storage_info (storage_id, create_time, name, 
      path, status, update_time
      )
    values (#{storageId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR}, 
      #{path,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  
  <delete id="deleteById" parameterType="java.lang.String">
    delete from storage_info
    where storage_id = #{storageId,jdbcType=VARCHAR}
  </delete>
  
  <select id="getList" resultMap="BaseResultMap" parameterType="java.util.Map">
        select  <include refid="Base_Column_List" />
         from storage_info 
        <where>
        	1=1
        	<if test="@Ognl@isNotEmpty(name)">
                and name like '%${name}%' 
            </if>
        </where>
        <if test="@Ognl@isNotEmpty(page)">
            limit #{page.firstIndex}, #{page.pageSize}
        </if>
    </select>
    
    <select id="getCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        select  count(0)
         from storage_info a 
        <where>
        	1=1
        	 <if test="@Ognl@isNotEmpty(name)">
                and name like '%${name}%' 
            </if>
        </where>
    </select>
    
    <update id="updateUnUseful" parameterType="org.cw.midc.entity.StorageInfo">
    update storage_info
    set 
      status = '0',
      update_time = #{updateTime,jdbcType=TIMESTAMP}
  </update>

</mapper>