<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.cw.midc.entity.StudyInfo" >
  <resultMap id="BaseResultMap" type="org.cw.midc.entity.StudyInfo" >
    <id column="studyinfo_id" property="studyinfoId" jdbcType="VARCHAR" />
    <result column="abs_history" property="absHistory" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="age_unit" property="ageUnit" jdbcType="VARCHAR" />
    <result column="apply_dep_name" property="applyDepName" jdbcType="VARCHAR" />
    <result column="apply_doc_name" property="applyDocName" jdbcType="VARCHAR" />
    <result column="apply_time" property="applyTime" jdbcType="TIMESTAMP" />
    <result column="clinical_manifest" property="clinicalManifest" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="hosp_id" property="hospId" jdbcType="VARCHAR" />
    <result column="is_available" property="isAvailable" jdbcType="VARCHAR" />
    <result column="org_studyinfo_id" property="orgStudyinfoId" jdbcType="VARCHAR" />
    <result column="photo_maker_id" property="photoMakerId" jdbcType="VARCHAR" />
    <result column="position_checkitem" property="positionCheckitem" jdbcType="VARCHAR" />
    <result column="pre_diagnose" property="preDiagnose" jdbcType="VARCHAR" />
    <result column="rpt_status" property="rptStatus" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="study_demand" property="studyDemand" jdbcType="VARCHAR" />
    <result column="study_desc" property="studyDesc" jdbcType="VARCHAR" />
    <result column="trans_status" property="transStatus" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="pat_id" property="patId" jdbcType="VARCHAR" />
    <result column="rpt_id" property="rptId" jdbcType="VARCHAR" />
    <result column="device_type" property="deviceType" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    studyinfo_id, abs_history, age, age_unit, apply_dep_name, apply_doc_name, apply_time, 
    clinical_manifest, create_time, hosp_id, is_available, org_studyinfo_id, photo_maker_id, 
    position_checkitem, pre_diagnose, rpt_status, status, study_demand, study_desc, trans_status, 
    update_time, pat_id, rpt_id, device_type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from study_info
    where studyinfo_id = #{studyinfoId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from study_info
    where studyinfo_id = #{studyinfoId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="org.cw.midc.entity.StudyInfo" >
    insert into study_info (studyinfo_id, abs_history, age, 
      age_unit, apply_dep_name, apply_doc_name, 
      apply_time, clinical_manifest, create_time, 
      hosp_id, is_available, org_studyinfo_id, 
      photo_maker_id, position_checkitem, pre_diagnose, 
      rpt_status, status, study_demand, 
      study_desc, trans_status, update_time, 
      pat_id, rpt_id, device_type
      )
    values (#{studyinfoId,jdbcType=VARCHAR}, #{absHistory,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{ageUnit,jdbcType=VARCHAR}, #{applyDepName,jdbcType=VARCHAR}, #{applyDocName,jdbcType=VARCHAR}, 
      #{applyTime,jdbcType=TIMESTAMP}, #{clinicalManifest,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{hospId,jdbcType=VARCHAR}, #{isAvailable,jdbcType=VARCHAR}, #{orgStudyinfoId,jdbcType=VARCHAR}, 
      #{photoMakerId,jdbcType=VARCHAR}, #{positionCheckitem,jdbcType=VARCHAR}, #{preDiagnose,jdbcType=VARCHAR}, 
      #{rptStatus,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{studyDemand,jdbcType=VARCHAR}, 
      #{studyDesc,jdbcType=VARCHAR}, #{transStatus,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{patId,jdbcType=VARCHAR}, #{rptId,jdbcType=VARCHAR}, #{deviceType,jdbcType=VARCHAR}
      )
  </insert>
  
  <update id="updateRptIdAndStatus" parameterType="Map" >
      update study_info 
      set rpt_status =  #{rptStatus,jdbcType=VARCHAR},
          rpt_id =  #{rptId,jdbcType=VARCHAR}                          
      where studyinfo_id = #{studyinfoId,jdbcType=VARCHAR}
  </update>
  
  <update id="updateTransStatus" parameterType="Map" >
      update study_info 
      set trans_status =  #{transStatus,jdbcType=VARCHAR}           
      where studyinfo_id = #{studyinfoId,jdbcType=VARCHAR}
  </update>
  
  <select id="getList" resultType="Map" parameterType="java.util.Map">
        select a.studyinfo_id as studyinfoId,a.age as age ,a.age_unit as ageUnit, a.device_type as deviceType ,
        a.pre_diagnose as  preDiagnose,
        a.abs_history as  absHistory,a.study_desc as studyDesc,a.create_time as createTime , a.update_time as updateTime ,a.clinical_manifest as clinicalManifest
        ,a.study_demand as studyDemand,a.position_checkitem as positionChk,a.rpt_status as rptStatus,a.trans_status as transStatus,a.status as status,a.is_available as isAvailable,a.apply_doc_name as applyDocName
        ,a.apply_dep_name as applyDepName,a.apply_time as applyTime,a.hosp_id as hospitalId,a.rpt_id as rptId,a.pat_id as patientId,b.pat_name as patientName,b.birthday as birthday,b.sex as patientSex
        ,b.patient_type as patientType,c.hosp_name as hospName
         from study_info a ,patient b ,hospital c
        <where>
        	1=1
        	and a.pat_id = b.pat_id
        	
        	and a.hosp_id = c.hosp_id
            <if test="@Ognl@isNotEmpty(hospitalId)">
                and a.hosp_id = #{hospitalId}
            </if>
            <if test="@Ognl@isNotEmpty(patientName)">
                and b.pat_name like '%${patientName}%'
            </if>
            <if test="@Ognl@isNotEmpty(patientId)">
                and b.pat_id = #{patientId}
            </if>
            <if test="@Ognl@isNotEmpty(patientSex)">
                and b.sex = #{patientSex}
            </if>
            <if test="@Ognl@isNotEmpty(deviceType)">
                and a.device_type = #{deviceType}
            </if>
            <if test="@Ognl@isNotEmpty(startTime)">
                <![CDATA[  and DATE_FORMAT(a.update_time, '%Y-%m-%d') >= #{startTime}]]>
            </if>
            <if test="@Ognl@isNotEmpty(endTime)">
                <![CDATA[  and DATE_FORMAT(a.update_time, '%Y-%m-%d') <= #{endTime}]]>
            </if>
            <if test="@Ognl@isNotEmpty(studyids)">
             	and a.studyinfo_id in 
                <foreach item="item" index="index" collection="studyids" open="(" separator="," close=")">  
				  #{item}  
				 </foreach>  
            </if>
        </where>
        <if test="@Ognl@isNotEmpty(page)">
            limit #{page.firstIndex}, #{page.pageSize}
        </if>
    </select>
    
    <select id="getStudyInfoIdList" resultType="String" parameterType="java.util.Map">
        select a.study_cp_id as studyid
         from study_check_pos a 
        <where>
        	1=1
            <if test="@Ognl@isNotEmpty(checkitemIdPk)">
                and a.check_item = #{checkitemIdPk}
            </if>
            <if test="@Ognl@isNotEmpty(positionIdPk)">
                and (a.position = #{positionIdPk}  or  a.sub_position =  #{positionIdPk}   )
            </if>
        </where>
    </select>
    
    <select id="getListByStudyinfoId" parameterType="java.lang.String" resultMap="BaseResultMap">
        select * from study_info where studyinfo_id = #{studyinfoId,jdbcType=VARCHAR}
    </select>
    
    <select id="getListByHospitalIdAndReportStatusAndTransportStatus" parameterType="java.util.Map" resultMap="BaseResultMap">
        select * from study_info a
         <where>
        	1=1
            <if test="@Ognl@isNotEmpty(hospitalId)">
                and a.hosp_id = #{hospitalId}
            </if>
            <if test="@Ognl@isNotEmpty(reportStatus)">
                and a.rpt_status = #{reportStatus}
            </if>
            <if test="@Ognl@isNotEmpty(transportStatus)">
                and a.trans_status = #{transportStatus}
            </if>
        </where>
    </select>
    
    <select id="getByOrginalStudyInfoIdAndHospitalId" parameterType="java.util.Map" resultMap="BaseResultMap">
        select * from study_info a
         <where>
        	1=1
            <if test="@Ognl@isNotEmpty(orginalStudyInfoId)">
                and a.org_studyinfo_id = #{orginalStudyInfoId}
            </if>
            <if test="@Ognl@isNotEmpty(hospitalId)">
                and a.hosp_id = #{hospitalId}
            </if>
        </where>
    </select>
    
    <select id="getById" parameterType="java.lang.String" resultMap="BaseResultMap">
        select * from study_info where studyinfo_id = #{studyinfoId,jdbcType=VARCHAR}
    </select>
    
    <select id="getCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(*) from study_info a ,patient b ,hospital c
        <where>
        	1=1
        	and a.pat_id = b.pat_id
        	
        	and a.hosp_id = c.hosp_id
            <if test="@Ognl@isNotEmpty(hospitalId)">
                and a.hosp_id = #{hospitalId}
            </if>
            <if test="@Ognl@isNotEmpty(patientName)">
                and b.pat_name like '%${patientName}%'
            </if>
            <if test="@Ognl@isNotEmpty(patientId)">
                and b.pat_id = #{patientId}
            </if>
            <if test="@Ognl@isNotEmpty(patientSex)">
                and b.sex = #{patientSex}
            </if>
            <if test="@Ognl@isNotEmpty(deviceType)">
                and a.device_type = #{deviceType}
            </if>
            
            <if test="@Ognl@isNotEmpty(startTime)">
                <![CDATA[  and DATE_FORMAT(a.update_time, '%Y-%m-%d') >= #{startTime}]]>
            </if>
            <if test="@Ognl@isNotEmpty(endTime)">
                <![CDATA[  and DATE_FORMAT(a.update_time, '%Y-%m-%d') <= #{endTime}]]>
            </if>
            
             <if test="@Ognl@isNotEmpty(studyids)">
             	and a.studyinfo_id in 
                <foreach item="item" index="index" collection="studyids" open="(" separator="," close=")">  
				  #{item}  
				 </foreach>  
            </if>
        </where>
    </select>
</mapper>